type User {
  id: ID!
  firstName: String!
  middleName: String
  lastName: String!
  email:String!
  password:String!
  verified:Boolean!
}

type Profile {
  id: ID!
  bio:String
  authorId: Int
}

type Post {
  id: ID!
  title: String!
  subtitle: String!
  content: String!
  published: Boolean
  authorId:Int
}

type Job {
  id: ID!
  title: String!
  subtitle: String!
  content: String!
  published: Boolean
  authorId:Int
}

type Query {
  jobs: [Job!]!
  job(id: ID!): Job!
  user(id: ID!): User!
}

type RegistrationResponse {
  success:Boolean
  error:{}
}

type Mutation {
  register(email: String!, password:String!): Boolean ||
  login(email: String!, password:String!): User
}